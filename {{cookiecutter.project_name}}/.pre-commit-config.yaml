repos:
  - repo: https://github.com/asottile/add-trailing-comma
    rev: v2.2.3
    hooks:
      - id: add-trailing-comma
  - repo: https://github.com/andreoliwa/nitpick
    rev: v0.32.0
    hooks:
      - id: nitpick
  - repo: local
    hooks:
      # from pre_commit_hooks
      - id: check-added-large-files
        name: Check for added large files
        description: Prevent giant files from being committed
        entry: check-added-large-files
        language: system
      - id: check-ast
        name: Check python ast
        description: Simply check whether the files parse as valid python.
        entry: check-ast
        language: system
        types: [ python ]
      - id: check-builtin-literals
        name: Check builtin type constructor use
        description: Require literal syntax when initializing empty or zero Python builtin types.
        entry: check-builtin-literals
        language: system
        types: [ python ]
      - id: check-case-conflict
        name: Check for case conflicts
        description: Check for files that would conflict in case-insensitive filesystems
        entry: check-case-conflict
        language: system
      - id: check-docstring-first
        name: Check docstring is first
        description: Checks a common error of defining a docstring after code.
        entry: check-docstring-first
        language: system
        types: [ python ]
      - id: check-json
        name: Check JSON
        description: This hook checks json files for parseable syntax.
        entry: check-json
        language: system
        types: [ json ]
      - id: pretty-format-json
        name: Pretty format JSON
        description: This hook sets a standard for formatting JSON files.
        entry: pretty-format-json
        language: system
        types: [ json ]
      - id: check-merge-conflict
        name: Check for merge conflicts
        description: Check for files that contain merge conflict strings.
        entry: check-merge-conflict
        language: system
        types: [ text ]
      - id: check-symlinks
        name: Check for broken symlinks
        description: Checks for symlinks which do not point to anything.
        entry: check-symlinks
        language: system
        types: [ symlink ]
      - id: check-toml
        name: Check Toml
        description: This hook checks toml files for parseable syntax.
        entry: check-toml
        language: system
        types: [ toml ]
      - id: check-vcs-permalinks
        name: Check vcs permalinks
        description: Ensures that links to vcs websites are permalinks.
        entry: check-vcs-permalinks
        language: system
        types: [ text ]
      - id: check-xml
        name: Check Xml
        description: This hook checks xml files for parseable syntax.
        entry: check-xml
        language: system
        types: [ xml ]
      - id: check-yaml
        name: Check Yaml
        description: This hook checks yaml files for parseable syntax.
        entry: check-yaml
        args: ['--unsafe']
        language: system
        types: [ yaml ]
      - id: debug-statements
        name: Debug Statements (Python)
        description: Check for debugger imports and py37+ `breakpoint()` calls in python source.
        entry: debug-statement-hook
        language: system
        types: [ python ]
      - id: destroyed-symlinks
        name: Detect Destroyed Symlinks
        description: Detects symlinks which are changed to regular files with a content of a path which that symlink was pointing to.
        entry: destroyed-symlinks
        language: system
        types: [ file ]
      - id: end-of-file-fixer
        name: Fix End of Files
        description: Ensures that a file is either empty, or ends with one newline.
        entry: end-of-file-fixer
        language: system
        types: [ text ]
        stages: [ commit, push, manual ]
      - id: file-contents-sorter
        name: File Contents Sorter
        description: Sort the lines in specified files (defaults to alphabetical). You must provide list of target files as input in your .pre-commit-config.yaml file.
        entry: file-contents-sorter
        language: system
        files: '^$'
      - id: fix-byte-order-marker
        name: fix UTF-8 byte order marker
        description: removes UTF-8 byte order marker
        entry: fix-byte-order-marker
        language: system
        types: [ python ]
      - id: forbid-new-submodules
        name: Forbid new submodules
        language: system
        entry: forbid-new-submodules
        description: Prevent addition of new git submodules
      - id: mixed-line-ending
        name: Mixed line ending
        description: Replaces or checks mixed line ending
        entry: mixed-line-ending
        language: system
        types: [ text ]
      - id: name-tests-test
        name: Tests should end in _test.py
        description: This verifies that test files are named correctly
        entry: name-tests-test
        language: system
        files: (^|/)tests/.+\.py$
      - id: sort-simple-yaml
        name: Sort simple YAML files
        language: system
        entry: sort-simple-yaml
        description: Sorts simple YAML files which consist only of top-level keys, preserving comments and blocks.
        files: '^$'
      - id: trailing-whitespace
        name: Trim Trailing Whitespace
        description: This hook trims trailing whitespace.
        entry: trailing-whitespace-fixer
        language: system
        types: [ text ]
        stages: [ commit, manual ]
      - id: remove-unused-imports-and-unused-variables
        name: Remove unused imports and unused variables
        description: This hook remove unused imports and unused variables.
        entry: autoflake
        args: [ --remove-all-unused-imports, --remove-unused-variables, --in-place, --recursive ]
        language: system
        types: [python]
        stages: [ commit, manual ]
      # from poetry
      - id: poetry-black
        name: Run poetry black
        description: Run poetry black
        entry: poetry run black
        language: system
        types: [ python ]
        stages: [ commit, manual ]
      - id: poetry-isort
        name: poetry run isort
        description: Run poetry isort
        entry: poetry run isort
        language: system
        types: [ python ]
        stages: [ commit, manual ]
      - id: poetry-lint
        name: Run poetry lint
        description: Run poetry lint
        entry: poetry run flakehell lint
        language: system
        types: [ python ]
        stages: [ push, manual ]
