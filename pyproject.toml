[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "nodeline-python-package"
description = "cookiecutter template to create new python packages"
version = "0.1.0"
readme = "README.md"
authors = [
  "timmyliang <2595715768@qq.com>"
]

license = "MIT"


[tool.poetry.dependencies]
python = "^3.7"

cookiecutter = "^1.7"
jinja2-git = "^1.1"
lice = "^0.6"


[tool.poetry.dev-dependencies]
binaryornot = "^0.4"

wemake-python-styleguide = "^0.16"
flake8-pytest-style = "^1.6"
nitpick = "^0.32"

pytest = "^7.1"
pytest-randomly = "^3.11"
pytest-cookies = "^0.6"

safety = "^1.10"
tomlkit = "^0.10"
MarkupSafe = "2.0"


[tool.nitpick]
style = "styles/nitpick-style-nodeline.toml"


[tool.black]
include = "/.pyi?$"
line-length = 88
target_version = ["py37"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version = "0.1.0"
update_changelog_on_bump = true
version_files = ["pyproject.toml:version"]

[tool.flakehell]
base = [".flakehell.toml"]

[tool.isort]
add_imports = ["from __future__ import absolute_import", "from __future__ import division", "from __future__ import print_function"]
atomic = true
filter_files = true
float_to_top = true
include_trailing_comma = true
known_first_party = "src"
lines_after_imports = 2
lines_between_types = 1
profile = "black"
use_parentheses = true
force_single_line = true
force_sort_within_sections = true
import_heading_firstparty = "Import local modules"
import_heading_future = "Import future modules"
import_heading_stdlib = "Import built-in modules"
import_heading_thirdparty = "Import third-party modules"
default_section = "THIRDPARTY"

[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true
